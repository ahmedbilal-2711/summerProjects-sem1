package javaCodes;
import java.awt.Color;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.sql.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import static java.awt.Color.*;
import java.io.File;
import java.io.IOException;
import javaCodes.TODOLIST;
import javax.swing.*;



/**
 *....
 * @author AlPhA
 */
public class Moodselector extends javax.swing.JFrame  {

    /**
     * Creates new form progressbar
     */
    public Moodselector() {
       
        initComponents();
       
    }
   

               Date dates=new Date();
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
        String stre=sdf.format(dates); 
          
        public void moodsetter(String md)
        {
          TODOLIST t=new TODOLIST();
        t.add("mood",stre,md,reason.getText());
        int reply=JOptionPane.showConfirmDialog(null,"WOULD YOU LIKE TO HAVE SOME QUOTES ACCORDING TO YOUR MOOD?");
        if(reply==JOptionPane.YES_OPTION)
        {
            if(md=="HAPPY")
            {
                quotegetter(1);
                 JOptionPane.showMessageDialog(null,"HAVE A GOOD DAY");
            }
             if(md=="ANGRY")
            {
                quotegetter(2);
                 JOptionPane.showMessageDialog(null,"HAVE A GOOD DAY");
            }
              if(md=="SAD")
            {
                quotegetter(3);
                 JOptionPane.showMessageDialog(null,"HAVE A GOOD DAY");
            }
        }
        else JOptionPane.showMessageDialog(null,"HAVE A GOOD DAY");
       
        }
        
      
 
 public int getrows()
 {
     int numberRow=0;
       try{ 
        Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mimmy", "root", "12345");
      
    String query = "select count(*) from mood";
    PreparedStatement st = conn.prepareStatement(query);
    ResultSet rs = st.executeQuery();
    
    while(rs.next()){
        numberRow = rs.getInt("count(*)");
        
        
          }
       }catch(Exception e)
          {
              System.out.println("not working"); 
          }
     
       return numberRow;
 }
  public double moodchecker(String mood,int colnum)
  {
      
      int counter=0;
      try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mimmy", "root", "12345");

            String sql ="select * from mood";
            PreparedStatement pst = conn.prepareStatement(sql);
      
            ResultSet rs = pst.executeQuery("select * from mood"); 
             if (rs != null)
                 while(rs.next())
                     
                 { 
                     
                     if((rs.getString(colnum)).equals(mood))
                 {
                     counter++;
                     
                 }}
            
            //JOptionPane.showMessageDialog(null, "ADDED INTO " + tablename + " SUCCESFULLY");
            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
      
      return counter;
  }
public void quotegetter(int colnum)
{
    
   
      try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mimmy", "root", "12345");

            String sql ="select * from moodquotes";
            PreparedStatement pst = conn.prepareStatement(sql);
      
            ResultSet rs = pst.executeQuery("select * from moodquotes"); 
             if (rs != null)
                 while(rs.next())
                     
                 { 
                     
                     JOptionPane.showMessageDialog(null, rs.getString(colnum));
                 }
            
            //JOptionPane.showMessageDialog(null, "ADDED INTO " + tablename + " SUCCESFULLY");
            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
        }}
      
     
   
    
    
    

  
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        moodtable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        new java.awt.Color(13, 8, 154,80);
        jPanel1 = new javax.swing.JPanel();
        angry = new javax.swing.JButton();
        moodratio = new javax.swing.JButton();
        happy = new javax.swing.JButton();
        sad = new javax.swing.JButton();
        reason = new javax.swing.JTextField();
        re = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        moodtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATE", "MOOD", "REASON"
            }
        ));
        jScrollPane1.setViewportView(moodtable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Sitka Text", 3, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("       MOOD");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 230, 50));

        jPanel1.setBackground(new java.awt.Color(13, 8, 154,80));

        angry.setBackground(new java.awt.Color(179, 255, 255));
        angry.setText("ANGRY");
        angry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                angryActionPerformed(evt);
            }
        });

        moodratio.setBackground(new java.awt.Color(179, 255, 255));
        moodratio.setText("RATIO");
        moodratio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moodratioActionPerformed(evt);
            }
        });

        happy.setBackground(new java.awt.Color(179, 255, 255));
        happy.setText("HAPPY");
        happy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                happyActionPerformed(evt);
            }
        });

        sad.setBackground(new java.awt.Color(179, 255, 255));
        sad.setText("SAD");
        sad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sadActionPerformed(evt);
            }
        });

        re.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        re.setText("REASON");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(re, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(happy, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(angry, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(reason)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(sad, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(moodratio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reason, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(re, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moodratio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(angry, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(happy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(194, 194, 194))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 560, 280));

        jButton1.setBackground(new java.awt.Color(179, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\AlPhA\\E-diary\\summerProjects-sem1\\mimmy\\src\\images\\previous.png")); // NOI18N
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\AlPhA\\E-diary\\summerProjects-sem1\\mimmy\\src\\images\\blue_bg.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 420));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void happyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_happyActionPerformed
        // TODO add your handling code here:
        
        moodsetter(happy.getText());
        
                
    }//GEN-LAST:event_happyActionPerformed

    private void sadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sadActionPerformed
        
           moodsetter(sad.getText());
    }//GEN-LAST:event_sadActionPerformed

    private void angryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_angryActionPerformed
        // TODO add your handling code here:
           moodsetter(angry.getText());
    }//GEN-LAST:event_angryActionPerformed

    private void moodratioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moodratioActionPerformed

      int totalrows=getrows();
      double fir=(moodchecker("HAPPY",2)*100)/totalrows;
      double sec=(moodchecker("ANGRY",2)*100)/totalrows;
      double thir=(moodchecker("SAD",2)*100)/totalrows;
        try {
            Moodbars m=new Moodbars(fir,sec,thir);
        } catch (InterruptedException ex) {
            Logger.getLogger(Moodselector.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Moodselector.class.getName()).log(Level.SEVERE, null, ex);
        }


       
    }//GEN-LAST:event_moodratioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Moodselector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Moodselector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Moodselector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Moodselector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Moodselector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton angry;
    private javax.swing.JButton happy;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton moodratio;
    private javax.swing.JTable moodtable;
    private javax.swing.JLabel re;
    private javax.swing.JTextField reason;
    private javax.swing.JButton sad;
    // End of variables declaration//GEN-END:variables

   

   

    
}
