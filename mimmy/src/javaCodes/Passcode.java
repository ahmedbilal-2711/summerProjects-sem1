/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaCodes;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import static javaCodes.todo_list.main;
import sun.security.util.Password;

/**
 *
 * @author Maryam
 */
public class Passcode extends javax.swing.JFrame {

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    int counter = 0;

    public Passcode() {
        initComponents();
        CreateConnection();
    }

    private void doAction(JButton button) {

        password_txt.setText(String.copyValueOf(password_txt.getPassword()) + button.getText());

    }

    private void blank() {

        username_txt.setText(null);
        password_txt.setText(null);
        passwordchk.setSelected(false);

    }

    public void CreateConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mimmy", "root", "password");
            System.out.println("Database connection successful");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddressBook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Validation(String username, String password) {

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields are required");
            return;
        }
        try {
            String query = "Select username, password from validation_tbl WHERE username='" + username + "'";

            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            if (!rs.next()) {
                JOptionPane.showMessageDialog(null, "Email not found!");
                pst.close();
                rs.close();
                return;
            }
            if (username.equals(rs.getString("username"))) {
                if (password.equals(rs.getString("password"))) {
                    blank();
                    dispose();
                    lock_gif lg = new lock_gif();
                    lg.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Invaild Password!");
                    blank();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                if (pst != null) {
                    pst.close();
                    rs.close();
                }
            } catch (Exception e) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loop_lbl = new javax.swing.JLabel();
        username_txt = new javax.swing.JTextField();
        password_txt = new javax.swing.JPasswordField();
        login_btn = new javax.swing.JButton();
        reset_btn = new javax.swing.JButton();
        passwordchk = new javax.swing.JCheckBox();
        password_lbl = new javax.swing.JLabel();
        username_lbl = new javax.swing.JLabel();
        grey_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(890, 520));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loop_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loop .gif"))); // NOI18N
        loop_lbl.setPreferredSize(new java.awt.Dimension(500, 520));
        getContentPane().add(loop_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 520));

        username_txt.setBackground(new java.awt.Color(153, 153, 153));
        username_txt.setForeground(new java.awt.Color(255, 255, 255));
        username_txt.setBorder(null);
        username_txt.setCaretColor(new java.awt.Color(255, 255, 255));
        username_txt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        username_txt.setNextFocusableComponent(password_txt);
        getContentPane().add(username_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, 190, 30));

        password_txt.setBackground(new java.awt.Color(153, 153, 153));
        password_txt.setForeground(new java.awt.Color(255, 255, 255));
        password_txt.setBorder(null);
        password_txt.setCaretColor(new java.awt.Color(255, 255, 255));
        password_txt.setNextFocusableComponent(passwordchk);
        getContentPane().add(password_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 190, 30));

        login_btn.setBackground(new java.awt.Color(0, 0, 0));
        login_btn.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        login_btn.setForeground(new java.awt.Color(255, 255, 255));
        login_btn.setText("Login");
        login_btn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        login_btn.setFocusable(false);
        login_btn.setNextFocusableComponent(reset_btn);
        login_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnActionPerformed(evt);
            }
        });
        login_btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                login_btnKeyPressed(evt);
            }
        });
        getContentPane().add(login_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 360, 80, 30));

        reset_btn.setBackground(new java.awt.Color(0, 0, 0));
        reset_btn.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        reset_btn.setForeground(new java.awt.Color(255, 255, 255));
        reset_btn.setText("Reset");
        reset_btn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reset_btn.setFocusable(false);
        reset_btn.setNextFocusableComponent(username_txt);
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });
        reset_btn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reset_btnKeyPressed(evt);
            }
        });
        getContentPane().add(reset_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 360, 80, 30));

        passwordchk.setBackground(new java.awt.Color(0, 0, 0));
        passwordchk.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        passwordchk.setText(" Show Password");
        passwordchk.setNextFocusableComponent(login_btn);
        passwordchk.setOpaque(false);
        passwordchk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordchkActionPerformed(evt);
            }
        });
        passwordchk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordchkKeyPressed(evt);
            }
        });
        getContentPane().add(passwordchk, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 150, -1));

        password_lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        password_lbl.setText("Password");
        getContentPane().add(password_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 250, 80, 30));

        username_lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        username_lbl.setText("Username");
        getContentPane().add(username_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 80, 30));

        grey_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/grey.jpg"))); // NOI18N
        getContentPane().add(grey_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordchkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordchkKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            counter++;
            if(counter%2 != 0){
                passwordchk.setSelected(true);
            } else {
                passwordchk.setSelected(false);
            }
            if (passwordchk.isSelected() == true) {
                password_txt.setEchoChar((char) 0);
            } else {
                password_txt.setEchoChar('*');
            }
            passwordchk.requestFocus();;
        }
    }//GEN-LAST:event_passwordchkKeyPressed

    private void passwordchkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordchkActionPerformed
        if (passwordchk.isSelected() == true) {
            password_txt.setEchoChar((char) 0);
        } else {
            password_txt.setEchoChar('*');
        }
    }//GEN-LAST:event_passwordchkActionPerformed

    private void login_btnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_login_btnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String password = "", username = "";
            password = password_txt.getText();
            username = username_txt.getText();
            Validation(username, password);

        }
    }//GEN-LAST:event_login_btnKeyPressed

    private void login_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnActionPerformed

        String password = "", username = "";
        password = password_txt.getText();
        username = username_txt.getText();
        Validation(username, password);
    }//GEN-LAST:event_login_btnActionPerformed

    private void reset_btnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reset_btnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            blank();

        }
    }//GEN-LAST:event_reset_btnKeyPressed

    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        blank();
    }//GEN-LAST:event_reset_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Passcode().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel grey_lbl;
    private javax.swing.JButton login_btn;
    private javax.swing.JLabel loop_lbl;
    private javax.swing.JLabel password_lbl;
    private javax.swing.JPasswordField password_txt;
    private javax.swing.JCheckBox passwordchk;
    private javax.swing.JButton reset_btn;
    private javax.swing.JLabel username_lbl;
    private javax.swing.JTextField username_txt;
    // End of variables declaration//GEN-END:variables
}
